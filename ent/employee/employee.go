// Code generated by ent, DO NOT EDIT.

package employee

const (
	// Label holds the string label denoting the employee type in the database.
	Label = "employee"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldAge holds the string denoting the age field in the database.
	FieldAge = "age"
	// EdgeDepartment holds the string denoting the department edge name in mutations.
	EdgeDepartment = "department"
	// Table holds the table name of the employee in the database.
	Table = "employees"
	// DepartmentTable is the table that holds the department relation/edge.
	DepartmentTable = "employees"
	// DepartmentInverseTable is the table name for the Department entity.
	// It exists in this package in order to avoid circular dependency with the "department" package.
	DepartmentInverseTable = "departments"
	// DepartmentColumn is the table column denoting the department relation/edge.
	DepartmentColumn = "department_employees"
)

// Columns holds all SQL columns for employee fields.
var Columns = []string{
	FieldID,
	FieldName,
	FieldAge,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "employees"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"department_employees",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}
